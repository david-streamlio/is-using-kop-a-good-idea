version: '3'

services:

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.2.1
  #   container_name: zookeeper
  #   hostname: zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   healthcheck:
  #     interval: 5s
  #     retries: 20
  #     test: echo ruok | nc zookeeper 2181

  # kafka:
  #   image: confluentinc/cp-kafka:7.2.1
  #   container_name: kafka
  #   hostname: kafka
  #   depends_on:
  #     zookeeper:
  #       condition: service_healthy
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1  
  #   ports:
  #     - 9092:9092
  #   healthcheck:
  #     test: nc -z localhost 9092 || exit -1
  #     interval: 5s
  #     retries: 20

  kafka:
    image: streamnative/sn-pulsar:2.10.1.4
    container_name: kafka
    hostname: kafka
    command: >
      bash -c "bin/apply-config-from-env.py conf/standalone.conf &&
      exec bin/pulsar standalone -nss -nfw"
    environment:
      PULSAR_PREFIX_messagingProtocols: kafka
      PULSAR_PREFIX_allowAutoTopicCreationType: partitioned
      PULSAR_PREFIX_kafkaTransactionCoordinatorEnabled: true
      PULSAR_PREFIX_brokerDeleteInactiveTopicsEnabled: false
      PULSAR_PREFIX_kafkaListeners: PLAINTEXT://0.0.0.0:9092
      PULSAR_PREFIX_kafkaAdvertisedListeners: PLAINTEXT://kafka:9092
      PULSAR_PREFIX_brokerEntryMetadataInterceptors: org.apache.pulsar.common.intercept.AppendIndexMetadataInterceptor
    ports:
      - 6650:6650
      - 8080:8080
      - 9092:9092
    healthcheck:
      interval: 5s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8080/admin/v2/clusters/standalone

  connect:
    image: quay.io/debezium/connect:1.9
    container_name: connect
    hostname: connect
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      GROUP_ID: 1
    ports:
      - 8083:8083
    healthcheck:
      interval: 5s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8083/connectors

  mysql:
    image: quay.io/debezium/example-mysql:1.9
    container_name: mysql
    hostname: mysql
    environment:
      MYSQL_ROOT_PASSWORD: debezium
      MYSQL_USER: mysqluser
      MYSQL_PASSWORD: mysqlpw
    ports:
      - 3306:3306
    healthcheck:
      interval: 5s
      retries: 20
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
